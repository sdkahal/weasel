name: Release CI

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.*'
  workflow_dispatch:

jobs:
  build-and-release:
    permissions:
      contents: write
    runs-on: windows-2025
    env:
      boost_version: 1.84.0
      BOOST_ROOT: ${{ github.workspace }}\deps\boost_1_84_0
    steps:
      - name: Checkout last commit
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Fetch all tags
        if: github.ref == 'refs/heads/master'
        run: git fetch --tags

      - name: Configure build environment
        shell: bash
        run: |
          cp env.vs2019.bat env.bat

      # cache boost
      - name: Cache Boost
        id: cache-boost
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.BOOST_ROOT }}
          key: ${{ runner.os }}-boost-${{ env.boost_version }}

      # install boost if not cached
      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        shell: bash
        run: |
          ./install_boost.bat
          ./build.bat boost arm64

      # add msbuild to PATH
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      # use upper stream released librime files if stable release
      - name: Get Rime files
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          .\get-rime.ps1 -use dev

      - name: Build data
        run: |
          .\build.bat data

      - name: Build Weasel Release
        id: build_weasel
        if: startsWith(github.ref, 'refs/tags/')
        env:
          RELEASE_BUILD: 1
        run: |
          .\build.bat arm64 installer

      - name: Build Weasel Nightly
        id: build_weasel_nightly
        if: github.ref == 'refs/heads/master'
        run: |
          .\build.bat arm64 installer

      - name: Compress Debug Symbols
        shell: pwsh
        run: |
          output\7z.exe a -t7z "./output/archives/debug_symbols.7z" "output/*.pdb" -r

      - name: Extract changelog
        shell: pwsh
        run: |
          .\extract_changelog.ps1
        if: startsWith(github.ref, 'refs/tags/')

      # 验证生成的文件是否存在
      - name: Verify artifacts existence
        shell: pwsh
        run: |
          $exeFiles = Get-ChildItem "$env:github_workspace/output/archives/weasel*.exe"
          $debugFiles = Get-ChildItem "$env:github_workspace/output/archives/debug_symbols.7z"
          
          if (-not $exeFiles) {
            Write-Error "❌ 未找到安装程序文件: weasel*.exe"
            Get-ChildItem "$env:github_workspace/output" -Recurse | Format-List FullName
            exit 1
          }
          
          Write-Host "✅ 找到安装程序:"
          $exeFiles | ForEach-Object { Write-Host " - $($_.FullName)" }
          
          if (-not $debugFiles) {
            Write-Warning "⚠️ 未找到调试符号文件: debug_symbols.7z"
          } else {
            Write-Host "✅ 找到调试符号: $($debugFiles.FullName)"
          }
      
      # 更新 Nightly 发布
      - name: Create Nightly release
        if: ${{ github.repository == 'rime/weasel' && github.ref == 'refs/heads/master' }}
        uses: softprops/action-gh-release@v2  # 改用更可靠的发布动作
        with:
          tag_name: latest
          prerelease: true
          name: "Nightly Build (${{ github.sha }})"
          body: "自动生成的每日构建版本"
          files: |
            ${{ github.workspace }}/output/archives/weasel*.exe
            ${{ github.workspace }}/output/archives/debug_symbols.7z
      
      # 更新 Stable 发布
      - name: Create Stable release
        if: ${{ github.repository == 'rime/weasel' && startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          draft: true
          body_path: ${{ github.workspace }}/RELEASE_CHANGELOG.md
          files: |
            ${{ github.workspace }}/output/archives/weasel*.exe
            ${{ github.workspace }}/output/archives/debug_symbols.7z
